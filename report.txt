TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 10 files
Detected 18 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: lsplab/layers.py
--------------------------------------------------------------------------------
lsplab/layers.py:36:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:40:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:45:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:128:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:131:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:136:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:277:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:281:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
lsplab/layers.py:286:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: lsplab/lstm.py
--------------------------------------------------------------------------------
lsplab/lstm.py:11:23: WARNING: Using member tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell in deprecated module tf.contrib.cudnn_rnn. (Manual edit required) tf.contrib.cudnn_rnn.* has been deprecated, and the CuDNN kernel has been integrated with tf.keras.layers.LSTM/GRU in TensorFlow 2.0. Please check the new API and use that instead.
lsplab/lstm.py:11:23: ERROR: Using member tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell in deprecated module tf.contrib. tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
--------------------------------------------------------------------------------
File: lsplab/lsplab.py
--------------------------------------------------------------------------------
lsplab/lsplab.py:174:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
lsplab/lsplab.py:195:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
lsplab/lsplab.py:233:17: ERROR: Using member tf.contrib.tensorboard.plugins.projector.ProjectorConfig in deprecated module tf.contrib. tf.contrib.tensorboard.plugins.projector.ProjectorConfig cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
lsplab/lsplab.py:243:8: ERROR: Using member tf.contrib.tensorboard.plugins.projector.visualize_embeddings in deprecated module tf.contrib. tf.contrib.tensorboard.plugins.projector.visualize_embeddings cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
lsplab/lsplab.py:247:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: lsplab/biotools.py
--------------------------------------------------------------------------------
lsplab/biotools.py:282:20: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

lsplab/biotools.py:297:23: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'lsplab'
================================================================================
--------------------------------------------------------------------------------
Processing file 'lsplab/biotools.py'
 outputting to 'lsplab_v2/biotools.py'
--------------------------------------------------------------------------------

168:20: INFO: Renamed 'tf.python_io.TFRecordWriter' to 'tf.io.TFRecordWriter'
234:18: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
235:24: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
236:25: INFO: Renamed 'tf.FixedLenFeature' to 'tf.io.FixedLenFeature'
240:60: INFO: Renamed 'tf.VarLenFeature' to 'tf.io.VarLenFeature'
242:18: INFO: Added keywords to args of function 'tf.parse_single_example'
242:18: INFO: Renamed 'tf.parse_single_example' to 'tf.io.parse_single_example'
244:27: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
252:20: INFO: Renamed 'tf.decode_raw' to 'tf.io.decode_raw'
252:34: INFO: Renamed 'tf.sparse_tensor_to_dense' to 'tf.sparse.to_dense'
280:33: INFO: Renamed 'tf.contrib.data.shuffle_and_repeat' to 'tf.data.experimental.shuffle_and_repeat'
282:20: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

297:23: WARNING: Changing dataset.make_initializable_iterator() to tf.compat.v1.data.make_initializable_iterator(dataset). Please check this transformation.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/lsplab.py'
 outputting to 'lsplab_v2/lsplab.py'
--------------------------------------------------------------------------------

125:16: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
127:31: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
128:31: INFO: Renamed 'tf.local_variables_initializer' to 'tf.compat.v1.local_variables_initializer'
150:25: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
173:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
173:35: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
174:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
184:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
184:35: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
194:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
194:35: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
194:53: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
195:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
204:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
204:35: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
204:53: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
233:17: ERROR: Using member tf.contrib.tensorboard.plugins.projector.ProjectorConfig in deprecated module tf.contrib. tf.contrib.tensorboard.plugins.projector.ProjectorConfig cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
243:8: ERROR: Using member tf.contrib.tensorboard.plugins.projector.visualize_embeddings in deprecated module tf.contrib. tf.contrib.tensorboard.plugins.projector.visualize_embeddings cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
245:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
247:8: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
337:30: INFO: Renamed 'tf.python_io.tf_record_iterator' to 'tf.compat.v1.python_io.tf_record_iterator'
344:20: INFO: Renamed 'tf.image.resize_image_with_crop_or_pad' to 'tf.image.resize_with_crop_or_pad'
356:44: INFO: Renamed 'tf.random_crop' to 'tf.image.random_crop'
364:32: INFO: Added keywords to args of function 'tf.nn.moments'
365:38: INFO: Added keywords to args of function 'tf.reduce_max'
365:89: INFO: Added keywords to args of function 'tf.size'
450:15: INFO: Added keywords to args of function 'tf.reduce_mean'
454:24: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
486:19: INFO: Added keywords to args of function 'tf.reduce_mean'
652:21: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

652:21: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
654:31: INFO: Added keywords to args of function 'tf.norm'
658:34: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
659:32: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
665:41: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
701:40: INFO: Added keywords to args of function 'tf.reduce_sum'
704:58: INFO: Added keywords to args of function 'tf.reduce_sum'
707:34: INFO: Added keywords to args of function 'tf.reduce_mean'
724:40: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
725:40: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
971:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
983:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
994:37: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
995:34: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
999:29: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

999:29: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
1029:34: INFO: Added keywords to args of function 'tf.reduce_mean'
1031:44: INFO: Added keywords to args of function 'tf.transpose'
1052:46: INFO: Renamed 'tf.image.resize_images' to 'tf.image.resize'
1055:41: INFO: Added keywords to args of function 'tf.nn.moments'
1056:55: INFO: Added keywords to args of function 'tf.reduce_mean'
1058:50: INFO: Added keywords to args of function 'tf.reduce_sum'
1060:38: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1060:56: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
1065:52: INFO: Added keywords to args of function 'tf.reduce_mean'
1066:70: INFO: Added keywords to args of function 'tf.nn.moments'
1068:50: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1068:68: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
1117:37: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
1130:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1130:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1131:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1131:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1132:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1132:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1133:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1133:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1134:20: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1134:20: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
1135:21: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1135:21: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
1137:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1137:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1139:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1139:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1140:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1140:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1141:20: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1141:20: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
1143:20: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1143:20: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1147:20: INFO: tf.summary.image requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1147:20: INFO: Renamed 'tf.summary.image' to 'tf.compat.v1.summary.image'
1152:28: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1152:28: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
1153:28: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1153:28: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
1154:28: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1154:28: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
1156:51: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1156:51: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1157:47: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1157:47: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
1158:39: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
1158:39: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
1217:28: INFO: Added keywords to args of function 'tf.norm'
1303:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1303:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
1337:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
1337:39: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
1383:17: INFO: Added keywords to args of function 'tf.pad'
1390:17: INFO: Added keywords to args of function 'tf.transpose'
1392:17: INFO: Added keywords to args of function 'tf.transpose'
1394:17: INFO: Added keywords to args of function 'tf.transpose'
1395:17: INFO: Added keywords to args of function 'tf.transpose'
1399:24: INFO: Added keywords to args of function 'tf.reduce_min'
1400:24: INFO: Added keywords to args of function 'tf.reduce_max'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/timer.py'
 outputting to 'lsplab_v2/timer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/reporter.py'
 outputting to 'lsplab_v2/reporter.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/__init__.py'
 outputting to 'lsplab_v2/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/cnn.py'
 outputting to 'lsplab_v2/cnn.py'
--------------------------------------------------------------------------------

278:29: INFO: Added keywords to args of function 'tf.reduce_sum'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/plotter.py'
 outputting to 'lsplab_v2/plotter.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/stats.py'
 outputting to 'lsplab_v2/stats.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/lstm.py'
 outputting to 'lsplab_v2/lstm.py'
--------------------------------------------------------------------------------

11:23: WARNING: Using member tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell in deprecated module tf.contrib.cudnn_rnn. (Manual edit required) tf.contrib.cudnn_rnn.* has been deprecated, and the CuDNN kernel has been integrated with tf.keras.layers.LSTM/GRU in TensorFlow 2.0. Please check the new API and use that instead.
11:23: ERROR: Using member tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell in deprecated module tf.contrib. tf.contrib.cudnn_rnn.CudnnCompatibleLSTMCell cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
41:25: INFO: Renamed 'tf.contrib.rnn.static_rnn' to 'tf.compat.v1.nn.static_rnn'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'lsplab/layers.py'
 outputting to 'lsplab_v2/layers.py'
--------------------------------------------------------------------------------

36:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
36:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
38:59: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

40:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
40:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
42:59: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
42:59: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
45:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
45:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
47:54: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
47:54: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
58:22: INFO: Added keywords to args of function 'tf.nn.conv2d'
58:22: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
96:19: INFO: Added keywords to args of function 'tf.nn.max_pool'
96:19: INFO: Renamed keyword argument for tf.nn.max_pool from value to input
96:19: INFO: Renamed 'tf.nn.max_pool' to 'tf.nn.max_pool2d'
101:19: INFO: Added keywords to args of function 'tf.nn.avg_pool'
101:19: INFO: Renamed keyword argument for tf.nn.avg_pool from value to input
101:19: INFO: Renamed 'tf.nn.avg_pool' to 'tf.nn.avg_pool2d'
128:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
128:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
129:59: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

131:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
131:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
133:59: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
133:59: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
136:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
136:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
138:54: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
138:54: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
188:19: INFO: Changing keep_prob arg of tf.nn.dropout to rate, and recomputing value.

277:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
277:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
279:59: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

281:31: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
281:31: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
283:59: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
283:59: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
286:26: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
286:26: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
288:54: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
288:54: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
294:26: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

